version: '3.8'

networks:
  app-network:
    driver: bridge

volumes:
  app-data:

services:
  webserver:
    image: nginx
    environment:
      APP_NAME: ${APP_NAME}
      APP_PORT: ${APP_PORT}
    container_name: ${APP_NAME}_webserver
    restart: unless-stopped
    command: /bin/bash -c "envsubst '$$APP_NAME $$APP_PORT' < /etc/nginx/conf.d/nginx.conf.template > /etc/nginx/conf.d/nginx.conf && nginx -g 'daemon off;'"
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./:/var/www
      - .docker/nginx:/etc/nginx/conf.d
    networks:
      app-network:
    depends_on:
      - database
      - backend

  database:
    container_name: ${APP_NAME}_database
    image: 'mysql/mysql-server:8.0'
    environment:
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD}
    ports:
      - "${MYSQL_PORT}:${INTERNAL_MYSQL_PORT}"
    volumes:
      - '.docker/mysql/data:/var/lib/mysql'
    networks:
      app-network:

  backend:
    build:
      context: ./
      dockerfile: .docker/php/Dockerfile
    command:
      - /bin/bash
      - -c
      - |
        composer update
        npm install
        npm run prod
        php-fpm
    container_name: ${APP_NAME}
    environment:
      APP_NAME: ${APP_NAME}
      APP_PORT: ${APP_PORT}
    volumes:
      - ./:/var/www
      - .docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      app-network:
    depends_on:
      - database
